# -*- coding: utf-8 -*-
import os
import telebot
import time
import random
import threading
from emoji import emojize
from telebot import types
from pymongo import MongoClient
import traceback
from datetime import datetime

token = os.environ['TELEGRAM_TOKEN']
bot = telebot.TeleBot('2135447201:AAFpS4Lmje3ABYILz0d64ygshbITNlq3OeY')

britmsgs=0
client=MongoClient(os.environ['database'])
db=client.fishwars
users=db.users
allseas=db.seas

fighthours=[12, 16, 20, 0]
sealist=['crystal', 'black', 'moon']
officialchat=-1001418916571
rest=False
ban=[]
letters=['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',
        'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']

allletters=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',
        'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '–∞', '–±', '–≤', '–≥', '–¥', '–µ', '—ë', '–∂', '–∑', '–∏', '–π', '–∫', '–ª', '–º', '–Ω', 
           '–æ', '–ø', '—Ä', '—Å', '—Ç', '—É', '—Ñ', '—Ö', '—Ü', '—á', '—à', '—â', '—ä', '—ã', '—å', '—ç', '—é', '—è']

try:
    pass

except Exception as e:
    print('–û—à–∏–±–∫–∞:\n', traceback.format_exc())
    bot.send_message(441399484, traceback.format_exc())

 
@bot.message_handler(commands=['update'])
def updd(m):
    if m.from_user.id==441399484:
        users.update_many({},{'$set':{'skills':{}, 'inventory':{}}})
        bot.send_message(441399484, 'yes')
            
            
@bot.message_handler(commands=['drop'])
def drop(m):
    if m.from_user.id==441399484:
        allseas.update_many({},{'$set':{'score':0}})
        bot.send_message(m.chat.id, '–°–±—Ä–æ—Å–∏–ª –æ—á–∫–∏ –≤—Å–µ–º –º–æ—Ä—è–º!')

@bot.message_handler(commands=['start'])
def start(m):
    user=users.find_one({'id':m.from_user.id})
    global rest
    if user==None and m.from_user.id==m.chat.id:
        users.insert_one(createuser(m.from_user))
        kb=types.ReplyKeyboardMarkup(resize_keyboard=True)
        al=allseas.find({})
        bann=None
        sc=0
        for ids in al:
            if ids['score']>sc:
                sc=ids['score']
        al=allseas.find({})
        banlist=[]
        for ids in al:
            if ids['score']==sc:
                banlist.append(ids['name'])
        if len(banlist)>1:
            banlist=[]
        print(banlist)
        for ids in allseas.find({}):
            if ids['name'] not in banlist:
                kb.add(types.KeyboardButton(sea_ru(ids['name'])))
        bot.send_message(m.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ, –∑–∞ –∫–∞–∫–æ–µ –∏–∑ –º–æ—Ä–µ–π –≤—ã –±—É–¥–µ—Ç–µ —Å—Ä–∞–∂–∞—Ç—å—Å—è.', reply_markup=kb)
        try:
            ref=m.text.split(' ')[1]
            u=users.find({})
            friend=None
            for ids in u:
                if ids['referal']==ref:
                    friend=ids
            if friend!=None:
                users.update_one({'id':friend['id']},{'$push':{'friends':m.from_user.id}})
                users.update_one({'id':m.from_user.id},{'$set':{'inviter':friend['id']}})
                bot.send_message(friend['id'], m.from_user.first_name+' –∑–∞—à–µ–ª –≤ –∏–≥—Ä—É –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª–∫–µ! –ö–æ–≥–¥–∞ –æ–Ω –ø–æ–∏–≥—Ä–∞–µ—Ç –Ω–µ–º–Ω–æ–≥–æ, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ +1 –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∏–ª–µ!')
        except Exception as e:
           bot.send_message(441399484, traceback.format_exc())

        
def mainmenu(user):
    kb=types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton('üí¢–ê—Ç–∞–∫–∞'), types.KeyboardButton('üõ°–ó–∞—â–∏—Ç–∞'))
    kb.add(types.KeyboardButton('üçñü•¨–ü–∏—Ç–∞–Ω–∏–µ'), types.KeyboardButton('‚ÑπÔ∏è–ò–Ω—Ñ–æ –ø–æ –∏–≥—Ä–µ'))
    kb.add(types.KeyboardButton('üêü–û–±–æ –º–Ω–µ'))
    needed=countnextlvl(user['lastlvl'])
    text=''
    text+='üêü–ò–º—è —Ä—ã–±—ã: '+user['gamename']+'\n'
    try:
        text+='üåä–†–æ–¥–Ω–æ–µ –º–æ—Ä–µ: '+sea_ru(user['sea'])+'\n'
    except:
        pass
    text+='üí™–°–∏–ª—ã: '+str(user['strenght'])+'/'+str(user['maxstrenght'])+'\n'
    text+='üèÖ–£—Ä–æ–≤–µ–Ω—å —ç–≤–æ–ª—é—Ü–∏–∏: '+str(user['lvl'])+'\n'
    text+='üß¨–û—á–∫–∏ —ç–≤–æ–ª—é—Ü–∏–∏: '+str(user['evolpoints'])+'/'+str(needed)+'\n'
    text+='üí¢–ê—Ç–∞–∫–∞: '+str(user['stats']['attack'])+'\n'
    text+='üõ°–ó–∞—â–∏—Ç–∞: '+str(user['stats']['def'])+'\n'
    text+='–†–µ–≥–µ–Ω —Å–∏–ª: 1üí™ / '+str(round(20*user['strenghtregencoef'], 2))+' –º–∏–Ω—É—Ç\n'
    if user['freestatspoints']>0:
        text+='–î–æ—Å—Ç—É–ø–Ω—ã –æ—á–∫–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫! –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è - /upstats'+'\n'
    bot.send_message(user['id'], '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n'+text, reply_markup=kb)
        
def blockbrit():
    ban.append(512006137)
    bot.send_message(512006137, '–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –±–æ–ª—å—à–µ, —á–µ–º 4—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –º–∏–Ω—É—Ç—É.')
        
        
@bot.message_handler()
def allmessages(m):
    global rest
    user=users.find_one({'id':m.from_user.id})
    if user!=None:
      # if m.from_user.id==512006137:
      #      global britmsgs
     #       britmsgs+=1
      #      if britmsgs>4:
       #         blockbrit()
       if m.from_user.id not in ban:
        if rest==False:
            if m.from_user.id==m.chat.id:
                if user['sea']==None:
                    if m.text=='üíé–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–µ':
                        users.update_one({'id':user['id']},{'$set':{'sea':'crystal'}})
                        bot.send_message(user['id'], '–¢–µ–ø–µ—Ä—å –≤—ã —Å—Ä–∞–∂–∞–µ—Ç–µ—Å—å –∑–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é üíé–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–≥–æ –º–æ—Ä—è!')
                        mainmenu(user)
                    if m.text=='‚ö´Ô∏è–ß—ë—Ä–Ω–æ–µ':
                        users.update_one({'id':user['id']},{'$set':{'sea':'black'}})
                        bot.send_message(user['id'], '–¢–µ–ø–µ—Ä—å –≤—ã —Å—Ä–∞–∂–∞–µ—Ç–µ—Å—å –∑–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é ‚ö´Ô∏è–ß—ë—Ä–Ω–æ–≥–æ –º–æ—Ä—è!')
                        mainmenu(user)
                    if m.text=='üåô–õ—É–Ω–Ω–æ–µ':
                        users.update_one({'id':user['id']},{'$set':{'sea':'moon'}})
                        bot.send_message(user['id'], '–¢–µ–ø–µ—Ä—å –≤—ã —Å—Ä–∞–∂–∞–µ—Ç–µ—Å—å –∑–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é üåô–õ—É–Ω–Ω–æ–≥–æ –º–æ—Ä—è!')
                        mainmenu(user)
                if m.text=='üõ°–ó–∞—â–∏—Ç–∞':
                    users.update_one({'id':user['id']},{'$set':{'battle.action':'def'}})
                    bot.send_message(user['id'], '–í—ã –≤–ø–ª—ã–ª–∏ –≤ –æ–±–æ—Ä–æ–Ω—É —Å–≤–æ–µ–≥–æ –º–æ—Ä—è! –ñ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ä–∞–∂–µ–Ω–∏—è.')
                if m.text=='üí¢–ê—Ç–∞–∫–∞':
                    kb=types.ReplyKeyboardMarkup(resize_keyboard=True)
                    for ids in sealist:
                        if ids!=user['sea']:
                            kb.add(types.KeyboardButton(seatoemoj(sea=ids)))
                    bot.send_message(user['id'], '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å.', reply_markup=kb)
                if m.text=='üåô' or m.text=='üíé' or m.text=='‚ö´Ô∏è':
                    atksea=seatoemoj(emoj=m.text)
                    if user['sea']!=atksea:
                        users.update_one({'id':user['id']},{'$set':{'battle.action':'attack', 'battle.target':atksea}})
                        bot.send_message(user['id'], '–í—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏—Å—å –∫ –∞—Ç–∞–∫–µ –Ω–∞ '+sea_ru(atksea)+' –º–æ—Ä–µ! –ñ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–∞ –±–∏—Ç–≤—ã.')
                        mainmenu(user)
                if m.text=='‚ÑπÔ∏è–ò–Ω—Ñ–æ –ø–æ –∏–≥—Ä–µ':
                    bot.send_message(m.chat.id, '–û—á–µ—Ä–µ–¥–Ω–æ–π –Ω–µ–æ–∫–æ–Ω—á–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –ü–∞—Å—é–∫–∞. –ü–æ–∫–∞ —á—Ç–æ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞—Ç—å –º–æ—Ä–µ –∏ —Å—Ä–∞–∂–∞—Ç—å—Å—è –∑–∞ –Ω–µ–≥–æ, '+
                                     '–ø–æ–ª—É—á–∞—è –¥–ª—è –Ω–µ–≥–æ –æ—á–∫–∏, –ø–æ–≤—ã—à–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å –∏ —É–ª—É—á—à–∞—Ç—å —Å–≤–æ–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏. –ë–∏—Ç–≤—ã –≤ 12:00, 16:00, 20:00 –∏ 24:00 –ø–æ –ú–°–ö.')
                    
                if m.text=='/menu':
                    mainmenu(user)
                    
                if m.text=='/upstats':
                    if user['freestatspoints']>0:
                        text='–°–≤–æ–±–æ–¥–Ω—ã–µ –æ—á–∫–∏: '+str(user['freestatspoints'])+'.\n–í—ã–±–µ—Ä–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏.'
                        kb=types.ReplyKeyboardMarkup(resize_keyboard=True)
                        kb.add(types.KeyboardButton('üí¢'), types.KeyboardButton('üõ°'))
                        bot.send_message(user['id'], text, reply_markup=kb)
                    else:
                        bot.send_message(user['id'], '–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –æ—á–∫–æ–≤!')
                        
                if m.text=='üí¢':
                    if user['freestatspoints']>0:
                        users.update_one({'id':user['id']},{'$inc':{'freestatspoints':-1, 'stats.attack':1}})
                        bot.send_message(user['id'], '–í—ã —Å—Ç–∞–ª–∏ —Å–∏–ª—å–Ω–µ–µ!')
                    else:
                        bot.send_message(user['id'], '–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –æ—á–∫–æ–≤!')
                    user=users.find_one({'id':m.from_user.id})
                    mainmenu(user)
                        
                if m.text=='üõ°':
                    if user['freestatspoints']>0:
                        users.update_one({'id':user['id']},{'$inc':{'freestatspoints':-1, 'stats.def':1}})
                        bot.send_message(user['id'], '–í—ã —Å—Ç–∞–ª–∏ —Å–∏–ª—å–Ω–µ–µ!')
                    else:
                        bot.send_message(user['id'], '–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –æ—á–∫–æ–≤!')
                    user=users.find_one({'id':m.from_user.id})
                    mainmenu(user)
                    
                if m.text=='/referal':
                    if user['referal']==None:
                        ref=genreferal(user)
                        users.update_one({'id':user['id']},{'$set':{'referal':ref}})
                    else:
                        ref=user['referal']
                    bot.send_message(user['id'], '–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π:\n'+'https://telegram.me/Fishwarsbot?start='+ref)
                    
                if m.text=='üçñü•¨–ü–∏—Ç–∞–Ω–∏–µ':
                    kb=types.ReplyKeyboardMarkup(resize_keyboard=True)
                    kb.add(types.KeyboardButton('üîù–ú–µ–ª–∫–æ–≤–æ–¥—å–µ'), types.KeyboardButton('üï≥–ì–ª—É–±–∏–Ω—ã'))
                    kb.add(types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥'))
                    bot.send_message(m.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, –≥–¥–µ –±—É–¥–µ—Ç–µ –ø—ã—Ç–∞—Ç—å—Å—è –∏—Å–∫–∞—Ç—å –ø–∏—â—É. –ß–µ–º –±–æ–ª—å—à–µ –≤—ã –ø–∏—Ç–∞–µ—Ç–µ—Å—å, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –∏–¥—ë—Ç —Ä–∞–∑–≤–∏—Ç–∏–µ!', reply_markup=kb)
                    
                if m.text=='üîù–ú–µ–ª–∫–æ–≤–æ–¥—å–µ':
                    strenght=1
                    if user['strenght']>=strenght:
                        if user['status']=='free':
                            users.update_one({'id':user['id']},{'$set':{'status':'eating'}})
                            users.update_one({'id':user['id']},{'$inc':{'strenght':-strenght}})
                            bot.send_message(m.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –∏—Å–∫–∞—Ç—å –ø–∏—â—É –Ω–∞ –ø–æ–±–µ—Ä–µ–∂—å–µ.')
                            t=threading.Timer(random.randint(60, 90), coastfeed, args=[user])
                            t.start()
                        else:
                            bot.send_message(user['id'], '–í—ã —É–∂–µ –∑–∞–Ω—è—Ç—ã —á–µ–º-—Ç–æ!')
                    else:
                        bot.send_message(user['id'], '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∏–ª - –¥–∞–∂–µ —Ä—ã–±–∞–º –Ω—É–∂–µ–Ω –æ—Ç–¥—ã—Ö!')
                    user=users.find_one({'id':m.from_user.id})
                    mainmenu(user)
                    
                if m.text=='üï≥–ì–ª—É–±–∏–Ω—ã':
                    strenght=2
                    if user['strenght']>=strenght:
                        if user['status']=='free':
                            users.update_one({'id':user['id']},{'$set':{'status':'eating'}})
                            users.update_one({'id':user['id']},{'$inc':{'strenght':-strenght}})
                            bot.send_message(m.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –∏—Å–∫–∞—Ç—å –ø–∏—â—É –≤ –≥–ª—É–±–∏–Ω—ã –º–æ—Ä—è.')
                            t=threading.Timer(random.randint(60, 90), depthsfeed, args=[user])
                            t.start()
                        else:
                            bot.send_message(user['id'], '–í—ã —É–∂–µ –∑–∞–Ω—è—Ç—ã —á–µ–º-—Ç–æ!')
                    else:
                        bot.send_message(user['id'], '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∏–ª - –¥–∞–∂–µ —Ä—ã–±–∞–º –Ω—É–∂–µ–Ω –æ—Ç–¥—ã—Ö!')
                    user=users.find_one({'id':m.from_user.id})
                    mainmenu(user)
                    
                if '/fishname' in m.text:
                    try:
                        if user['changename']>0:
                            no=0
                            name=m.text.split(' ')[1]
                            if len(name)<=20 and len(name)>1:
                                for ids in name:
                                    if ids.lower() not in allletters:
                                        no=1
                            else:
                                no=1
                            if no==0:
                                users.update_one({'id':user['id']},{'$set':{'gamename':name}})
                                users.update_one({'id':user['id']},{'$inc':{'changename':-1}})
                                bot.send_message(m.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –∏–º—è –Ω–∞ "*'+name+'*"!', parse_mode='markdown')
                            else:
                                bot.send_message(m.chat.id, '–î–ª–∏–Ω–∞ –Ω–∏–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 2—Ö –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤ –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–µ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã!')
                        else:
                            bot.send_message(m.chat.id, '–ü–æ–ø—ã—Ç–∫–∏ —Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!')
                    except:
                        pass
                    
                if m.text=='üêü–û–±–æ –º–Ω–µ' or m.text=='‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
                    mainmenu(user)
                    
            if m.text=='/score':
                seas=allseas.find({})
                text=''
                for ids in seas:
                    text+=sea_ru(ids['name'])+' –º–æ—Ä–µ: '+str(ids['score'])+' –æ—á–∫–æ–≤\n'
                bot.send_message(m.chat.id, text)
        else:
            if m.chat.id==m.from_user.id:
                bot.send_message(m.chat.id, '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–¥—ë—Ç –±–∏—Ç–≤–∞ –º–æ—Ä–µ–π!')
                
                
def genreferal(user):
    u=users.find({})
    ref=''
    allref=[]
    for ids in users.find({}):
        allref.append(ids['referal'])
    while len(ref)<32:
        ref+=random.choice(letters)
    while ref in allref:
        ref=''
        while len(ref)<32:
            ref+=random.choice(letters)
    return ref


def coastfeed(user):
    users.update_one({'id':user['id']},{'$set':{'status':'free'}})
    luckytexts=['–ù–∞ –±–µ—Ä–µ–≥–µ –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ —Å—Ç–∞—é –º–∞–ª—å–∫–æ–≤ –∏ —Ä–µ—à–∏–ª–∏, —á—Ç–æ —ç—Ç–æ –±—É–¥–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–º –ø–µ—Ä–µ–∫—É—Å–æ–º.',
                '–ù–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø–ª–∞–≤–∞–ª —Ç—Ä—É–ø –∫–∞–∫–æ–π-—Ç–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π —Ä—ã–±—ã. –ï–≥–æ –≤—ã –∏ —Ä–µ—à–∏–ª–∏ —Å—å–µ—Å—Ç—å. –†—ã–±—ã –≤–æ–æ–±—â–µ –µ–¥—è—Ç –≤—Å—ë, —á—Ç–æ –≤–∏–¥—è—Ç.']
    falsetexts=['–ü–æ–∫–∞ –≤—ã –¥–æ–±–∏—Ä–∞–ª–∏—Å—å –¥–æ –±–µ—Ä–µ–≥–∞, –≤—ã –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∏–±—Ä–∞—Ü–∏–∏ –Ω–µ–ø–æ–¥–∞–ª–µ–∫—É, –æ–∑–Ω–∞—á–∞—é—â–∏–µ, —á—Ç–æ –∫–æ–≥–æ-—Ç–æ –µ–¥—è—Ç. –ß—Ç–æ–±—ã '+\
               '—Å–∞–º–∏–º –Ω–µ —Å—Ç–∞—Ç—å –∫–æ—Ä–º–æ–º, –≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ.']
    chance=70*user['agility']
    if 'slow' in user['skills']:
        chance+=user['skills']['slow']['lvl']*0.5
    coef=1
    if random.randint(1,100)<=chance:
        i=user['recievepoints']*user['pointmodifer']*coef
        bottompoints=int(i*0.8)
        toppoints=int(i*1.2)
        points=random.randint(bottompoints, toppoints)
        if points<=0:
            points=1
        text=random.choice(luckytexts)
        text+='\n–ü–æ–ª—É—á–µ–Ω–æ:\n'+'*–û—á–∫–∏ —ç–≤–æ–ª—é—Ü–∏–∏*: '+str(points)+'üß¨'
        bot.send_message(user['id'], text, parse_mode='markdown')
        recieveexp(user, points)
    else:
        text=random.choice(falsetexts)
        bot.send_message(user['id'], text, parse_mode='markdown')
    
    
    
def depthsfeed(user):
    users.update_one({'id':user['id']},{'$set':{'status':'free'}})
    luckytexts=['–í –≥–ª—É–±–∏–Ω–∞—Ö –º–æ—Ä—è –≤—ã –Ω–∞—à–ª–∏ —Å—Ç–∞—é –∫—Ä–∞–±–æ–≤. –ü—Ä–∏—à–ª–æ—Å—å –ø–æ—Ç—Ä—É–¥–∏—Ç—å—Å—è, —á—Ç–æ–±—ã –Ω–µ –±—ã—Ç—å –ø–æ–∫—É—Å–∞–Ω–Ω—ã–º–∏, –Ω–æ –≤ –∏—Ç–æ–≥–µ –≤—ã –Ω–∞–µ–ª–∏—Å—å.',
                '–í—ã –Ω–∞—à–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –≤–∫—É—Å–Ω—ã–µ –Ω–∞ –≤–∏–¥ —Ä–∞—Å—Ç–µ–Ω–∏—è. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—á–∫–æ–≤ —ç–≤–æ–ª—é—Ü–∏–∏ —Å–æ–π–¥—ë—Ç.']
    falsetexts=['–í –æ–¥–∏–Ω –º–æ–º–µ–Ω—Ç –≤–∞—à–µ–≥–æ –∑–∞–ø–ª—ã–≤–∞ –≤—ã –æ—â—É—Ç–∏–ª–∏, —á—Ç–æ –¥–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω—ã–º. –ï—Å–ª–∏ –±—ã –≤—ã –ø–æ–ø–ª—ã–ª–∏ –¥–∞–ª—å—à–µ, —Ç–æ –≤–∞—Å –ø—Ä–æ—Å—Ç–æ —Å–ø–ª—é—â–∏–ª–æ –±—ã.']
    chance=55*user['agility']
    if 'slow' in user['skills']:
        chance+=user['skills']['slow']['lvl']*0.5
    coef=2.5
    if random.randint(1,100)<=chance:
        i=user['recievepoints']*user['pointmodifer']*coef
        bottompoints=int(i*0.8)
        toppoints=int(i*1.2)
        points=random.randint(bottompoints, toppoints)
        if points<=0:
            points=1
        text=random.choice(luckytexts)
        text+='\n–ü–æ–ª—É—á–µ–Ω–æ:\n'+'*–û—á–∫–∏ —ç–≤–æ–ª—é—Ü–∏–∏*: '+str(points)+'üß¨'
        bot.send_message(user['id'], text, parse_mode='markdown')
        recieveexp(user, points)
    else:
        text=random.choice(falsetexts)
        bot.send_message(user['id'], text, parse_mode='markdown')
        
    
    

def recieveexp(user, exp):
    users.update_one({'id':user['id']},{'$inc':{'evolpoints':exp}})
    c=int(countnextlvl(user['lastlvl']))
    if user['evolpoints']+exp>=c:
        users.update_one({'id':user['id']},{'$set':{'lastlvl':c, 'recievepoints':countnextpointrecieve(user['recievepoints'])}})
        users.update_one({'id':user['id']},{'$inc':{'lvl':1, 'freeevolpoints':2, 'freestatspoints':1}})
        bot.send_message(user['id'], '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–ª–∏! –ü—Ä–æ–∫–∞—á–∫–∞ —Å–∫–∏–ª–ª–æ–≤ - /skills (–ø–æ–∫–∞ —á—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞).')
        user=users.find_one({'id':user['id']})
        if user['lvl']==3 and user['inviter']!=None:
            users.update_one({'id':user['inviter']},{'$inc':{'maxstrenght':1}})
            bot.send_message(user['inviter'], user['gamename']+' –æ—Å–≤–æ–∏–ª—Å—è –≤ –∏–≥—Ä–µ! –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ +1 –∫ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.')
        
            
            
def seatoemoj(sea=None, emoj=None):
    if sea=='moon':
        return 'üåô'
    if sea=='crystal':
        return 'üíé'
    if sea=='black':
        return '‚ö´Ô∏è'
    if emoj=='‚ö´Ô∏è':
        return 'black'
    if emoj=='üíé':
        return 'crystal'
    if emoj=='üåô':
        return 'moon'

    
def endrest():
    global rest
    rest=False
    
def seafight():
    seas={}
    cusers=users.find({})
    for ids in sealist:
        seas.update(createsea(ids))
    for ids in cusers:
        if ids['battle']['action']=='def':
            seas[ids['sea']]['defers'].update({ids['id']:ids})
        elif ids['battle']['action']=='attack':
            seas[ids['battle']['target']]['attackers'].update({ids['id']:ids})
    
    for ids in seas:
        sea=seas[ids]
        print(sea)
        for idss in sea['defers']:
            user=sea['defers'][idss]
            defpower=user['stats']['def']
            if 'fat' in user['skills']:
                defpower+=defpower*user['skills']['fat']['lvl']*0.01
            if 'steelleather' in user['skills']:
                if random.randint(1,1000)<=user['skills']['steelleather']['lvl']*0.5*10:
                    if len(seas[ids]['attackers'])>0:
                        trgt=random.choice(seas[ids]['attackers'])
                        trgt['attack']=trgt['attack']/2
                        bot.send_message(user['id'], '–°–≤–æ–µ–π –∫–æ–∂–µ–π –≤—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ —Ä—ã–±—É '+trgt['gamename']+', —Å–Ω–∏–∑–∏–≤ –µ–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –Ω–∞ 50%!')
            sea['defpower']+=defpower
        for idss in sea['attackers']:
            user=sea['attackers'][idss]
            if 'sharpteeth' in user['skills']:
                user['stats']['attack']+=user['stats']['attack']*user['skills']['sharpteeth']['lvl']*0.01
            sea['attackerspower']+=user['stats']['attack']
            
        if sea['defpower']<sea['attackerspower']:
            sea['saved']=False
    text=''
    for ids in seas:
        sea=seas[ids]
        if sea['saved']==False:
            sea['score']+=0
            scores=[]
            for idss in sea['attackers']:
                atker=sea['attackers'][idss]
                if atker['sea'] not in scores:
                    scores.append(atker['sea'])
                    seas[atker['sea']]['score']+=3
            text+='üí¢'+sea_ru(sea['name'])+' –º–æ—Ä–µ –ø–æ—Ç–µ—Ä–ø–µ–ª–æ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ –≤ –±–∏—Ç–≤–µ! –¢–æ–ø –∞—Ç–∞–∫—É—é—â–∏—Ö:\n'
            who='attackers'
            stat='attack'
            text+=battletext(sea, who, stat)
            text+='–¢–æ–ø –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤:\n'
            who='defers'
            stat='def'
            text+=battletext(sea, who, stat)
        else:
            sea['score']+=8
            text+='üõ°'+sea_ru(sea['name'])+' –º–æ—Ä–µ –æ—Ç—Å—Ç–æ—è–ª–æ —Å–≤–æ—é —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é! –¢–æ–ø –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤:\n'
            who='defers'
            stat='def'
            text+=battletext(sea, who, stat)
            text+='–¢–æ–ø –∞—Ç–∞–∫—É—é—â–∏—Ö:\n'
            who='attackers'
            stat='attack'
            text+=battletext(sea, who, stat)
    text+='–ù–∞—á–∏—Å–ª–µ–Ω–Ω—ã–µ –æ—á–∫–∏:\n\n'
    for ids in seas:
        text+=sea_ru(seas[ids]['name'])+' –º–æ—Ä–µ: '+str(seas[ids]['score'])+' –æ—á–∫–æ–≤\n'
        allseas.update_one({'name':seas[ids]['name']},{'$inc':{'score':seas[ids]['score']}})
    users.update_many({},{'$set':{'battle.target':None, 'battle.action':None}})
    bot.send_message(officialchat, '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–∏—Ç–≤—ã:\n\n'+text)
            
            
         
        
def battletext(sea, who, stat):
    top=5
    i=0
    text=''
    alreadyintext=[]
    while i<top:
        intext=None
        maxstat=0
        for idss in sea[who]:
            user=sea[who][idss]
            if user['stats'][stat]>maxstat and user['id'] not in alreadyintext:
                maxstat=user['stats'][stat]
                intext=user
        if intext!=None:
            alreadyintext.append(intext['id'])
            text+=intext['gamename']            
            text+=', '                            
        i+=1
    if len(sea[who])>0:
        text=text[:len(text)-2]
        text+='.'
    text+='\n\n'
    return text
            
            
def createuser(user):
    stats={
        'attack':1,
        'def':1
    }
    battle={
        'action':None,
        'target':None
    }
    return {
        'id':user.id,
        'name':user.first_name,
        'gamename':user.first_name,
        'stats':stats,
        'sea':None,
        'status':'free',
        'maxstrenght':8,
        'strenght':8,
        'agility':1,                     # 1 = 100%
        'battle':battle,
        'evolpoints':0,
        'lvl':1,
        'inventory':{},
        'freestatspoints':0,
        'freeevolpoints':0,
        'lastlvl':0,
        'strenghtregencoef':1,       # –ß–µ–º –º–µ–Ω—å—à–µ, —Ç–µ–º –ª—É—á—à–µ
        'laststrenghtregen':None,
        'recievepoints':1,                # 1 = 1 exp
        'pointmodifer':1,                 # 1 = 100%
        'referal':None,
        'changename':3,
        'skills':{}
    }

def regenstrenght(user):
    users.update_one({'id':user['id']},{'$inc':{'strenght':1}})
    users.update_one({'id':user['id']},{'$set':{'laststrenghtregen':time.time()+3*3600}})


def countnextlvl(lastlvl):
    if lastlvl!=0:
        nextlvl=int(lastlvl*2.9)
    else:
        nextlvl=10
    return nextlvl
        
def countnextpointrecieve(recievepoints):
    return recievepoints*2.1

def sea_ru(sea):
    if sea=='crystal':
        return 'üíé–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–µ'
    if sea=='black':
        return '‚ö´Ô∏è–ß—ë—Ä–Ω–æ–µ'
    if sea=='moon':
        return 'üåô–õ—É–Ω–Ω–æ–µ'

   
def createsea(sea):
    return {sea:{
        'name':sea,
        'defpower':0,
        'attackerspower':0,
        'defers':{},
        'attackers':{},
        'saved':True,
        'score':0
    }
           }

def timecheck():
    globaltime=time.time()+3*3600
    ctime=str(datetime.fromtimestamp(globaltime)).split(' ')[1]
    global rest
    chour=int(ctime.split(':')[0])
    cminute=int(ctime.split(':')[1])
    csecond=float(ctime.split(':')[2])
    csecond=round(csecond, 0)
    if chour in fighthours and rest==False and cminute==0:
        seafight()
        rest=True
        t=threading.Timer(120, endrest)
        t.start()
    for ids in users.find({}):
        user=ids
        if user['strenght']<user['maxstrenght']:
            if user['laststrenghtregen']==None:
                regenstrenght(user)
            elif globaltime>=user['laststrenghtregen']+20*60*user['strenghtregencoef']:
                regenstrenght(user)
    if csecond==0:
        global britmsgs
        britmsgs=0
        global ban
        ban=[]
    t=threading.Timer(1, timecheck)
    t.start()
    

timecheck()
    
    
users.update_many({},{'$set':{'status':'free'}})
print('7777')
bot.polling(none_stop=True,timeout=600)

